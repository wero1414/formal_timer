; SMT-LIBv2 description generated by Yosys 0.9+3911 (open-tool-forge build) (git sha1 dcd9f0af, gcc 9.3.0-17ubuntu1~20.04 -Os)
; yosys-smt2-module timer
(declare-sort |timer_s| 0)
(declare-fun |timer_is| (|timer_s|) Bool)
(declare-fun |timer#0| (|timer_s|) Bool) ; \reset
; yosys-smt2-input reset 1
; yosys-smt2-wire reset 1
(define-fun |timer_n reset| ((state |timer_s|)) Bool (|timer#0| state))
(declare-fun |timer#1| (|timer_s|) Bool) ; \load
; yosys-smt2-input load 1
; yosys-smt2-wire load 1
(define-fun |timer_n load| ((state |timer_s|)) Bool (|timer#1| state))
(declare-fun |timer#2| (|timer_s|) (_ BitVec 1)) ; \f_past_valid
; yosys-smt2-register f_past_valid 1
; yosys-smt2-wire f_past_valid 1
(define-fun |timer_n f_past_valid| ((state |timer_s|)) Bool (= ((_ extract 0 0) (|timer#2| state)) #b1))
(declare-fun |timer#3| (|timer_s|) (_ BitVec 16)) ; \cycles
; yosys-smt2-input cycles 16
; yosys-smt2-wire cycles 16
(define-fun |timer_n cycles| ((state |timer_s|)) (_ BitVec 16) (|timer#3| state))
(declare-fun |timer#4| (|timer_s|) (_ BitVec 16)) ; \counter
; yosys-smt2-register counter 16
; yosys-smt2-wire counter 16
(define-fun |timer_n counter| ((state |timer_s|)) (_ BitVec 16) (|timer#4| state))
(declare-fun |timer#5| (|timer_s|) Bool) ; \clk
; yosys-smt2-input clk 1
; yosys-smt2-wire clk 1
; yosys-smt2-clock clk posedge
(define-fun |timer_n clk| ((state |timer_s|)) Bool (|timer#5| state))
(define-fun |timer#6| ((state |timer_s|)) Bool (bvugt (|timer#4| state) #b0000000000000000)) ; \busy
; yosys-smt2-output busy 1
; yosys-smt2-wire busy 1
(define-fun |timer_n busy| ((state |timer_s|)) Bool (|timer#6| state))
(declare-fun |timer#7| (|timer_s|) (_ BitVec 16)) ; $past$timer.v:55$9$0
; yosys-smt2-register $past$timer.v:55$9$0 16
(define-fun |timer_n $past$timer.v:55$9$0| ((state |timer_s|)) (_ BitVec 16) (|timer#7| state))
(declare-fun |timer#8| (|timer_s|) (_ BitVec 16)) ; $past$timer.v:50$5$0
; yosys-smt2-register $past$timer.v:50$5$0 16
(define-fun |timer_n $past$timer.v:50$5$0| ((state |timer_s|)) (_ BitVec 16) (|timer#8| state))
(declare-fun |timer#9| (|timer_s|) (_ BitVec 1)) ; $past$timer.v:49$3$0
; yosys-smt2-register $past$timer.v:49$3$0 1
(define-fun |timer_n $past$timer.v:49$3$0| ((state |timer_s|)) Bool (= ((_ extract 0 0) (|timer#9| state)) #b1))
(declare-fun |timer#10| (|timer_s|) (_ BitVec 1)) ; $past$timer.v:42$2$0
; yosys-smt2-register $past$timer.v:42$2$0 1
(define-fun |timer_n $past$timer.v:42$2$0| ((state |timer_s|)) Bool (= ((_ extract 0 0) (|timer#10| state)) #b1))
(declare-fun |timer#11| (|timer_s|) (_ BitVec 1)) ; $past$timer.v:41$1$0
; yosys-smt2-register $past$timer.v:41$1$0 1
(define-fun |timer_n $past$timer.v:41$1$0| ((state |timer_s|)) Bool (= ((_ extract 0 0) (|timer#11| state)) #b1))
(declare-fun |timer#12| (|timer_s|) (_ BitVec 1)) ; $formal$timer.v:55$17_EN
; yosys-smt2-register $formal$timer.v:55$17_EN 1
(define-fun |timer_n $formal$timer.v:55$17_EN| ((state |timer_s|)) Bool (= ((_ extract 0 0) (|timer#12| state)) #b1))
(declare-fun |timer#13| (|timer_s|) (_ BitVec 1)) ; $formal$timer.v:55$17_CHECK
; yosys-smt2-register $formal$timer.v:55$17_CHECK 1
(define-fun |timer_n $formal$timer.v:55$17_CHECK| ((state |timer_s|)) Bool (= ((_ extract 0 0) (|timer#13| state)) #b1))
(declare-fun |timer#14| (|timer_s|) (_ BitVec 1)) ; $formal$timer.v:50$16_EN
; yosys-smt2-register $formal$timer.v:50$16_EN 1
(define-fun |timer_n $formal$timer.v:50$16_EN| ((state |timer_s|)) Bool (= ((_ extract 0 0) (|timer#14| state)) #b1))
(declare-fun |timer#15| (|timer_s|) (_ BitVec 1)) ; $formal$timer.v:50$16_CHECK
; yosys-smt2-register $formal$timer.v:50$16_CHECK 1
(define-fun |timer_n $formal$timer.v:50$16_CHECK| ((state |timer_s|)) Bool (= ((_ extract 0 0) (|timer#15| state)) #b1))
(declare-fun |timer#16| (|timer_s|) (_ BitVec 1)) ; $formal$timer.v:44$15_EN
; yosys-smt2-register $formal$timer.v:44$15_EN 1
(define-fun |timer_n $formal$timer.v:44$15_EN| ((state |timer_s|)) Bool (= ((_ extract 0 0) (|timer#16| state)) #b1))
(declare-fun |timer#17| (|timer_s|) (_ BitVec 1)) ; $formal$timer.v:44$15_CHECK
; yosys-smt2-register $formal$timer.v:44$15_CHECK 1
(define-fun |timer_n $formal$timer.v:44$15_CHECK| ((state |timer_s|)) Bool (= ((_ extract 0 0) (|timer#17| state)) #b1))
(declare-fun |timer#18| (|timer_s|) Bool) ; $formal$timer.v:42$14_EN
; yosys-smt2-assert 0 counting_
(define-fun |timer_a 0| ((state |timer_s|)) Bool (or (= ((_ extract 0 0) (|timer#13| state)) #b1) (not (= ((_ extract 0 0) (|timer#12| state)) #b1)))) ; counting_
; yosys-smt2-assert 1 _load_
(define-fun |timer_a 1| ((state |timer_s|)) Bool (or (= ((_ extract 0 0) (|timer#15| state)) #b1) (not (= ((_ extract 0 0) (|timer#14| state)) #b1)))) ; _load_
(define-fun |timer#19| ((state |timer_s|)) Bool (bvugt (|timer#3| state) #b0000000000000000)) ; $0$formal$timer.v:28$12_CHECK[0:0]$32
; yosys-smt2-assume 0 timer.v:28.32-31.27
(define-fun |timer_u 0| ((state |timer_s|)) Bool (or (|timer#19| state) (not true))) ; $assume$timer.v:28$61
(define-fun |timer#20| ((state |timer_s|)) Bool (|timer_is| state)) ; $0$formal$timer.v:27$10_EN[0:0]$66
; yosys-smt2-assume 1 timer.v:27.12-27.26
(define-fun |timer_u 1| ((state |timer_s|)) Bool (or (|timer#0| state) (not (|timer#20| state)))) ; $assume$timer.v:27$60
; yosys-smt2-assert 2 timer.v:44.20-45.25
(define-fun |timer_a 2| ((state |timer_s|)) Bool (or (= ((_ extract 0 0) (|timer#17| state)) #b1) (not (= ((_ extract 0 0) (|timer#16| state)) #b1)))) ; $assert$timer.v:44$62
; yosys-smt2-anyseq timer#21 1 $auto$setundef.cc:501:execute$142
(declare-fun |timer#21| (|timer_s|) (_ BitVec 1)) ; $auto$rtlil.cc:2811:Anyseq$143
(define-fun |timer#22| ((state |timer_s|)) Bool (distinct (|timer#4| state) #b0000000000000000)) ; $procmux$88_CMP
(define-fun |timer#23| ((state |timer_s|)) (_ BitVec 1) (ite (|timer#22| state) (ite (|timer#6| state) #b1 #b0) (|timer#21| state))) ; $0$formal$timer.v:44$15_CHECK[0:0]$38
(define-fun |timer#24| ((state |timer_s|)) (_ BitVec 1) (ite (|timer#22| state) #b1 #b0)) ; $0$formal$timer.v:44$15_EN[0:0]$39
; yosys-smt2-anyseq timer#25 1 $auto$setundef.cc:501:execute$146
(declare-fun |timer#25| (|timer_s|) (_ BitVec 1)) ; $auto$rtlil.cc:2811:Anyseq$147
; yosys-smt2-anyseq timer#26 1 $auto$setundef.cc:501:execute$144
(declare-fun |timer#26| (|timer_s|) (_ BitVec 1)) ; $auto$rtlil.cc:2811:Anyseq$145
(define-fun |timer#27| ((state |timer_s|)) Bool (= (|timer#4| state) (|timer#8| state))) ; $eq$timer.v:50$53_Y
(define-fun |timer#28| ((state |timer_s|)) Bool (not (or  (= ((_ extract 0 0) (|timer#11| state)) #b1) false))) ; $logic_not$timer.v:49$51_Y
(define-fun |timer#29| ((state |timer_s|)) Bool (and (or  (= ((_ extract 0 0) (|timer#9| state)) #b1) false) (or  (|timer#28| state) false))) ; $logic_and$timer.v:49$52_Y
(define-fun |timer#30| ((state |timer_s|)) (_ BitVec 1) (ite (|timer#29| state) (ite (|timer#27| state) #b1 #b0) (|timer#26| state))) ; $procmux$95_Y
(define-fun |timer#31| ((state |timer_s|)) (_ BitVec 1) (ite (= ((_ extract 0 0) (|timer#2| state)) #b1) (|timer#30| state) (|timer#25| state))) ; $0$formal$timer.v:50$16_CHECK[0:0]$40
(define-fun |timer#32| ((state |timer_s|)) (_ BitVec 1) (ite (|timer#29| state) #b1 #b0)) ; $procmux$91_Y
(define-fun |timer#33| ((state |timer_s|)) (_ BitVec 1) (ite (= ((_ extract 0 0) (|timer#2| state)) #b1) (|timer#32| state) #b0)) ; $auto$rtlil.cc:2218:Mux$159
; yosys-smt2-anyseq timer#34 1 $auto$setundef.cc:501:execute$140
(declare-fun |timer#34| (|timer_s|) (_ BitVec 1)) ; $auto$rtlil.cc:2811:Anyseq$141
; yosys-smt2-anyseq timer#35 1 $auto$setundef.cc:501:execute$138
(declare-fun |timer#35| (|timer_s|) (_ BitVec 1)) ; $auto$rtlil.cc:2811:Anyseq$139
(define-fun |timer#36| ((state |timer_s|)) (_ BitVec 17) (bvsub (concat #b0 (|timer#7| state)) #b00000000000000001)) ; { $sub$timer.v:55$58_Y [31] $sub$timer.v:55$58_Y [15:0] }
(define-fun |timer#37| ((state |timer_s|)) Bool (= (concat #b0000000000000000 (|timer#4| state)) (concat ((_ extract 16 16) (|timer#36| state)) (concat ((_ extract 16 16) (|timer#36| state)) (concat ((_ extract 16 16) (|timer#36| state)) (concat ((_ extract 16 16) (|timer#36| state)) (concat ((_ extract 16 16) (|timer#36| state)) (concat ((_ extract 16 16) (|timer#36| state)) (concat ((_ extract 16 16) (|timer#36| state)) (concat ((_ extract 16 16) (|timer#36| state)) (concat ((_ extract 16 16) (|timer#36| state)) (concat ((_ extract 16 16) (|timer#36| state)) (concat ((_ extract 16 16) (|timer#36| state)) (concat ((_ extract 16 16) (|timer#36| state)) (concat ((_ extract 16 16) (|timer#36| state)) (concat ((_ extract 16 16) (|timer#36| state)) (concat ((_ extract 16 16) (|timer#36| state)) (|timer#36| state)))))))))))))))))) ; $eq$timer.v:55$59_Y
(define-fun |timer#38| ((state |timer_s|)) Bool (and (or  (= ((_ extract 0 0) (|timer#10| state)) #b1) false) (or  (|timer#28| state) false))) ; $logic_and$timer.v:54$55_Y
(define-fun |timer#39| ((state |timer_s|)) Bool (not (or  (= ((_ extract 0 0) (|timer#9| state)) #b1) false))) ; $logic_not$timer.v:54$56_Y
(define-fun |timer#40| ((state |timer_s|)) Bool (and (or  (|timer#38| state) false) (or  (|timer#39| state) false))) ; $logic_and$timer.v:54$57_Y
(define-fun |timer#41| ((state |timer_s|)) (_ BitVec 1) (ite (|timer#40| state) (ite (|timer#37| state) #b1 #b0) (|timer#35| state))) ; $procmux$103_Y
(define-fun |timer#42| ((state |timer_s|)) (_ BitVec 1) (ite (= ((_ extract 0 0) (|timer#2| state)) #b1) (|timer#41| state) (|timer#34| state))) ; $0$formal$timer.v:55$17_CHECK[0:0]$42
(define-fun |timer#43| ((state |timer_s|)) (_ BitVec 1) (ite (|timer#40| state) #b1 #b0)) ; $procmux$99_Y
(define-fun |timer#44| ((state |timer_s|)) (_ BitVec 1) (ite (= ((_ extract 0 0) (|timer#2| state)) #b1) (|timer#43| state) #b0)) ; $auto$rtlil.cc:2218:Mux$161
(define-fun |timer#45| ((state |timer_s|)) (_ BitVec 16) (bvsub (|timer#4| state) #b0000000000000001)) ; $sub$timer.v:18$20_Y
(define-fun |timer#46| ((state |timer_s|)) (_ BitVec 16) (ite (|timer#6| state) (|timer#45| state) #b0000000000000000)) ; $procmux$107_Y
(define-fun |timer#47| ((state |timer_s|)) (_ BitVec 16) (ite (|timer#1| state) (|timer#3| state) (|timer#46| state))) ; $procmux$110_Y
(define-fun |timer#48| ((state |timer_s|)) Bool (or  (|timer#1| state) (|timer#6| state))) ; $auto$opt_dff.cc:217:make_patterns_logic$149
(define-fun |timer#49| ((state |timer_s|)) (_ BitVec 16) (ite (|timer#48| state) (|timer#47| state) (|timer#4| state))) ; $auto$rtlil.cc:2218:Mux$155
(define-fun |timer#50| ((state |timer_s|)) (_ BitVec 16) (ite (|timer#0| state) #b0000000000000000 (|timer#49| state))) ; $auto$rtlil.cc:2218:Mux$157
(define-fun |timer_a| ((state |timer_s|)) Bool (and
  (|timer_a 0| state)
  (|timer_a 1| state)
  (|timer_a 2| state)
))
(define-fun |timer_u| ((state |timer_s|)) Bool (and
  (|timer_u 0| state)
  (|timer_u 1| state)
))
(define-fun |timer_i| ((state |timer_s|)) Bool (and
  (= (= ((_ extract 0 0) (|timer#2| state)) #b1) false) ; f_past_valid
  (= (= ((_ extract 0 0) (|timer#12| state)) #b1) false) ; $formal$timer.v:55$17_EN
  (= (= ((_ extract 0 0) (|timer#14| state)) #b1) false) ; $formal$timer.v:50$16_EN
  (= (= ((_ extract 0 0) (|timer#16| state)) #b1) false) ; $formal$timer.v:44$15_EN
  (= (|timer#18| state) false) ; $formal$timer.v:42$14_EN
))
(define-fun |timer_h| ((state |timer_s|)) Bool true)
(define-fun |timer_t| ((state |timer_s|) (next_state |timer_s|)) Bool (and
  (= (|timer#23| state) (|timer#17| next_state)) ; $procdff$131 $formal$timer.v:44$15_CHECK
  (= (|timer#24| state) (|timer#16| next_state)) ; $procdff$132 $formal$timer.v:44$15_EN
  (= (|timer#31| state) (|timer#15| next_state)) ; $procdff$133 $formal$timer.v:50$16_CHECK
  (= (|timer#33| state) (|timer#14| next_state)) ; $auto$opt_dff.cc:702:run$153 $formal$timer.v:50$16_EN
  (= (|timer#42| state) (|timer#13| next_state)) ; $procdff$135 $formal$timer.v:55$17_CHECK
  (= (|timer#44| state) (|timer#12| next_state)) ; $auto$opt_dff.cc:702:run$152 $formal$timer.v:55$17_EN
  (= (ite (|timer#0| state) #b1 #b0) (|timer#11| next_state)) ; $procdff$116 $past$timer.v:41$1$0
  (= (ite (|timer#6| state) #b1 #b0) (|timer#10| next_state)) ; $procdff$117 $past$timer.v:42$2$0
  (= (ite (|timer#1| state) #b1 #b0) (|timer#9| next_state)) ; $procdff$118 $past$timer.v:49$3$0
  (= (|timer#3| state) (|timer#8| next_state)) ; $procdff$120 $past$timer.v:50$5$0
  (= (|timer#4| state) (|timer#7| next_state)) ; $procdff$124 $past$timer.v:55$9$0
  (= (|timer#50| state) (|timer#4| next_state)) ; $auto$opt_dff.cc:764:run$151 \counter
  (= #b1 (|timer#2| next_state)) ; $procdff$115 \f_past_valid
)) ; end of module timer
; yosys-smt2-topmod timer
; end of yosys output
